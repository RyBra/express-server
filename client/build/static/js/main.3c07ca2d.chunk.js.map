{"version":3,"sources":["components/towers/tower/styled.js","components/towers/tower/index.js","components/towers/index.js","App.js","serviceWorker.js","index.js"],"names":["TowerWrapper","styled","div","towerInfo","value","maxValue","minValue","Tower","сurrentPercentage","paintedLine","this","props","title","heightСalculation","className","width","height","viewBox","fill","xmlns","d","opacity","stroke","strokeWidth","strokeMiterlimit","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","Component","TowersWrapper","Towers","state","towers","fetch","window","location","host","then","response","json","setState","map","tower","i","key","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c07ca2d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst TowerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #fff;\n\n  p {\n    text-align: center;\n  }\n\n  svg {\n    margin-top: -24px;\n    margin-bottom: -60px;\n  }\n  .underline {\n    position: relative;\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      width: 50%;\n      height: 3px;\n      background: ${({ towerInfo }) =>\n        towerInfo.value <= towerInfo.maxValue &&\n        towerInfo.value >= towerInfo.minValue\n          ? \"#21B249\"\n          : \"#c43535\"};\n      bottom: 0;\n      left: 25%;\n    }\n  }\n`;\n\nexport default TowerWrapper;\n","import React, { PureComponent as Component } from \"react\";\nimport TowerWrapper from \"./styled\";\n\nclass Tower extends Component {\n  heightСalculation(сurrentPercentage) {\n    const emptyLine = 460.5;\n    const fullfiledLine = 65;\n\n    let step = (emptyLine - fullfiledLine) * 0.01;\n    let paintedLine = fullfiledLine + step * (100 - сurrentPercentage);\n\n    if (paintedLine < 65) {\n      paintedLine = 65;\n    } else if (paintedLine > 460.5) {\n      paintedLine = 460.5;\n    }\n\n    return paintedLine;\n  }\n\n  render() {\n    const { title, value, maxValue, minValue } = this.props;\n\n    let сurrentPercentage = (100 / maxValue) * value;\n\n    let paintedLine = this.heightСalculation(сurrentPercentage);\n\n    return (\n      <TowerWrapper towerInfo={this.props}>\n        <div className=\"underline\">\n          <h2>{title}</h2>\n          <p>\n            Уровень карналита <br /> {~~сurrentPercentage}%\n          </p>\n        </div>\n        <svg\n          width=\"155\"\n          height=\"618\"\n          viewBox=\"0 0 155 618\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M154.6 57.9H0V62.2H154.6V57.9Z\" fill=\"#CBCBCB\" />\n          <path\n            d=\"M145.9 65H8.6001V156.9H145.9V65Z\"\n            fill=\"url(#paint0_linear)\"\n          />\n          <path d=\"M154.6 463.7H0V468H154.6V463.7Z\" fill=\"#CBCBCB\" />\n          <path\n            d=\"M145.9 166.5H8.6001V258.4H145.9V166.5Z\"\n            fill=\"url(#paint1_linear)\"\n          />\n          <path\n            d=\"M145.9 267.9H8.6001V359.8H145.9V267.9Z\"\n            fill=\"url(#paint2_linear)\"\n          />\n          <path\n            d=\"M145.9 369.4H8.6001V461.3H145.9V369.4Z\"\n            fill=\"url(#paint3_linear)\"\n          />\n          <path\n            d=\"M68.6001 547.4L8.6001 470.8H145.9L86.0001 547.4H68.6001Z\"\n            fill=\"url(#paint4_linear)\"\n          />\n          <path\n            opacity=\"0.5\"\n            d={`M137.4 ${paintedLine}H16.5V460.5H137.4V255.4Z`}\n            fill={\n              value <= maxValue && value >= minValue ? \"#21B249\" : \"#c43535\"\n            }\n          />\n          }\n          <path d=\"M154.6 260.8H0V265.1H154.6V260.8Z\" fill=\"#CBCBCB\" />\n          <path d=\"M154.6 362.2H0V366.5H154.6V362.2Z\" fill=\"#CBCBCB\" />\n          <path d=\"M154.6 159.3H0V163.6H154.6V159.3Z\" fill=\"#CBCBCB\" />\n          <path\n            d=\"M53.7 53.6H100.8\"\n            stroke=\"#8B959F\"\n            strokeWidth=\"4\"\n            strokeMiterlimit=\"22.9256\"\n          />\n          <path\n            d=\"M75.8999 530.1H25.3999C19.8999 530.1 15.3999 525.6 15.3999 520.1V496.2C15.3999 490.7 19.8999 486.2 25.3999 486.2H75.8999C81.3999 486.2 85.8999 490.7 85.8999 496.2V520.1C85.8999 525.6 81.3999 530.1 75.8999 530.1Z\"\n            stroke=\"#21B149\"\n            strokeWidth=\"3\"\n            strokeMiterlimit=\"10\"\n          />\n          <defs>\n            <linearGradient\n              id=\"paint0_linear\"\n              x1=\"11.9571\"\n              y1=\"110.956\"\n              x2=\"145.919\"\n              y2=\"110.947\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#616166\" />\n              <stop offset=\"0.21\" stopColor=\"#9B9B9B\" />\n              <stop offset=\"1\" stopColor=\"#48484F\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint1_linear\"\n              x1=\"11.9571\"\n              y1=\"212.4\"\n              x2=\"145.919\"\n              y2=\"212.4\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#616166\" />\n              <stop offset=\"0.21\" stopColor=\"#9B9B9B\" />\n              <stop offset=\"1\" stopColor=\"#48484F\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint2_linear\"\n              x1=\"11.9571\"\n              y1=\"313.849\"\n              x2=\"145.919\"\n              y2=\"313.849\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#616166\" />\n              <stop offset=\"0.21\" stopColor=\"#9B9B9B\" />\n              <stop offset=\"1\" stopColor=\"#48484F\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint3_linear\"\n              x1=\"11.9571\"\n              y1=\"415.297\"\n              x2=\"145.919\"\n              y2=\"415.297\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#616166\" />\n              <stop offset=\"0.21\" stopColor=\"#9B9B9B\" />\n              <stop offset=\"1\" stopColor=\"#48484F\" />\n            </linearGradient>\n            <linearGradient\n              id=\"paint4_linear\"\n              x1=\"8.6128\"\n              y1=\"509.104\"\n              x2=\"145.922\"\n              y2=\"509.104\"\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <stop stopColor=\"#616166\" />\n              <stop offset=\"0.21\" stopColor=\"#9B9B9B\" />\n              <stop offset=\"1\" stopColor=\"#48484F\" />\n            </linearGradient>\n          </defs>\n        </svg>\n        <div className=\"footer underline\">\n          <p>Масса карналита</p>\n          <p>{value}</p>\n        </div>\n      </TowerWrapper>\n    );\n  }\n}\n\nexport default Tower;\n","import React, { PureComponent as Component } from \"react\";\nimport styled from \"styled-components\";\nimport Tower from \"./tower\";\n\nlet TowersWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n  text-align: center;\n  width: 100%;\n`;\n\nclass Towers extends Component {\n  state = {\n    towers: []\n  };\n\n  componentDidMount() {\n    fetch(`http://${window.location.host}:5000/towers/`)\n      .then(response => response.json())\n      .then(towers => this.setState({ towers: towers }));\n  }\n\n  render() {\n    return (\n      <TowersWrapper>\n        {this.state.towers.map((tower, i) => (\n          <Tower\n            id={tower.id}\n            title={tower.title}\n            value={tower.value}\n            minValue={tower.minValue}\n            maxValue={tower.maxValue}\n            key={i}\n          ></Tower>\n        ))}\n      </TowersWrapper>\n    );\n  }\n}\n\nexport default Towers;\n","import React from \"react\";\nimport \"./App.css\";\nimport Towers from \"./components/towers\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Towers></Towers>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}